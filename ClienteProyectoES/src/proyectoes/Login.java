/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectoes;

import java.awt.Color;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import okhttp3.MediaType;
import okhttp3.MultipartBody;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.RequestBody;
import okhttp3.Response;
import org.json.JSONException;
import org.json.JSONObject;

/**
 *
 * @author Carlos
 */
public class Login extends javax.swing.JFrame {
    
    public static MenuUsuario FRAME_menuUsuario = new MenuUsuario();
    public static String IP = "localhost";
    public static String PORT = "5000";
    
    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
        setSize(600,230);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButtonLogin = new javax.swing.JButton();
        jButtonRegistro = new javax.swing.JButton();
        jLabelUsuario = new javax.swing.JLabel();
        jLabelPassword = new javax.swing.JLabel();
        jTextFieldUsuario = new javax.swing.JTextField();
        jLabelError = new javax.swing.JLabel();
        jTextFieldPassword = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setMaximumSize(new java.awt.Dimension(350, 230));

        jPanel2.setBackground(new java.awt.Color(255, 153, 51));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Inicio de sesión");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        jButtonLogin.setText("Iniciar sesión");
        jButtonLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLoginActionPerformed(evt);
            }
        });

        jButtonRegistro.setText("Registrarse");
        jButtonRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRegistroActionPerformed(evt);
            }
        });

        jLabelUsuario.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelUsuario.setForeground(new java.awt.Color(255, 255, 255));
        jLabelUsuario.setText("ID del usuario:");

        jLabelPassword.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelPassword.setForeground(new java.awt.Color(255, 255, 255));
        jLabelPassword.setText("Contraseña:");

        jTextFieldUsuario.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextFieldUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldUsuarioActionPerformed(evt);
            }
        });

        jLabelError.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelError.setForeground(new java.awt.Color(255, 0, 51));
        jLabelError.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jTextFieldPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPasswordActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabelPassword, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelUsuario, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldUsuario)
                            .addComponent(jTextFieldPassword)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonLogin)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonRegistro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelError, javax.swing.GroupLayout.DEFAULT_SIZE, 383, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelUsuario)
                    .addComponent(jTextFieldUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelPassword)
                    .addComponent(jTextFieldPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonLogin)
                    .addComponent(jButtonRegistro)
                    .addComponent(jLabelError))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLoginActionPerformed
        // TODO add your handling code here:
        Seguridad s = new Seguridad();
        String usuario = jTextFieldUsuario.getText(), password = jTextFieldPassword.getText();
        if (usuario.equals("") || password.equals(""))
        {
            jLabelError.setText("Existen campos vacíos");
        }else{
            String hash = s.getSHA512(password);
            //Mitad login, mitad clave privada
            String loginHash = hash.substring(0, hash.length()/2);
            String AESHash = hash.substring(hash.length()/2);
            loginPOST(usuario, loginHash, AESHash);
        }
    }//GEN-LAST:event_jButtonLoginActionPerformed

    private void jTextFieldUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldUsuarioActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jTextFieldUsuarioActionPerformed
    
    //AQUÍ REGISTRAMOS
    private void jButtonRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRegistroActionPerformed
        // TODO add your handling code here:
        Seguridad s = new Seguridad();
        String usuario = jTextFieldUsuario.getText(), password = jTextFieldPassword.getText();
        if (usuario.equals("") || password.equals(""))
        {
            jLabelError.setText("Existen campos vacíos");
        }else{
            //Comprobar contraseña segura
            if(comprobarPasswordSegura(password)){
                String hash = s.getSHA512(password);
                //Mitad login, mitad clave privada
                String loginHash = hash.substring(0, hash.length()/2);
                String AESHash = hash.substring(hash.length()/2);
                registrarsePOST(usuario, loginHash, AESHash);
            }
        }
    }//GEN-LAST:event_jButtonRegistroActionPerformed

    private void jTextFieldPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPasswordActionPerformed

    private void registrarsePOST(String usuario, String password, String AESHash){
 
       //Generamos el par de claves RSA
       Seguridad.generarClavesRSA();
       //La ciframos con nuestra clave AES
       Seguridad.cifrarClavePrivadaRSA(usuario,AESHash);
       
       //Cargamos claves publica y privada
       File pub_key = new File("public.key");
       File priv_key = new File("privateKey_" + usuario);
       
       OkHttpClient client = new OkHttpClient();
       MediaType JSON = MediaType.parse("application/json; charset=utf-8");
       // put your json here

       RequestBody body = new MultipartBody.Builder()
                .setType(MultipartBody.FORM)
                .addFormDataPart("usuario", usuario)
                .addFormDataPart("password", password)
                .addFormDataPart("publicKey", "publicKey_" + usuario, RequestBody.create(MediaType.parse("key"), pub_key))
                .addFormDataPart("privateKey", "privateKey_" + usuario, RequestBody.create(MediaType.parse("key"), priv_key))
                .build();
        
       Request request = new Request.Builder()
                .url("http://"+IP+":"+PORT+"/registrarse")
                .post(body)
                .build();

       Response response = null;
       try {
           response = client.newCall(request).execute();
           byte[] responseBody = response.body().bytes();
           JSONObject json_response = new JSONObject(new String(responseBody));
           String result = json_response.getString("result");
           
           //COMPROBAR AUTENTICACION
           if(result.equals("OK")){
               //LOGIN CORRECTO
               String userId = String.valueOf(json_response.getInt("userId"));
               FRAME_menuUsuario.setVisible(true);
               FRAME_menuUsuario.setUSUARIO(usuario);
               FRAME_menuUsuario.setUSER_ID(userId);
               FRAME_menuUsuario.setUSER_PK(AESHash);
               pub_key.deleteOnExit();
               priv_key.delete();
               this.setVisible(false);
               
           }else{
               String error = json_response.getString("error");
               jLabelError.setText(error);
           }
       } catch (IOException e) {
           e.printStackTrace();
           jLabelError.setText("Error realizando petición");
       } catch (JSONException ex) { 
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
       }
    }    
    
    private void loginPOST(String usuario, String password, String PKHash){
        // create your json here
        JSONObject jsonObject = new JSONObject();
        try {
            jsonObject.put("usuario", usuario);
            jsonObject.put("password", password);
        } catch (JSONException e) {
            e.printStackTrace();
        }

       OkHttpClient client = new OkHttpClient();
       MediaType JSON = MediaType.parse("application/json; charset=utf-8");
       // put your json here
       RequestBody body = RequestBody.create(JSON, jsonObject.toString());
       Request request = new Request.Builder()
                         .url("http://"+IP+":"+PORT+"/login")
                         .post(body)
                         .build();

       Response response = null;
       try {
           response = client.newCall(request).execute();
           byte[] responseBody = response.body().bytes();
           JSONObject json_response = new JSONObject(new String(responseBody));
           String result = json_response.getString("result");
           
           //COMPROBAR AUTENTICACION
           if(result.equals("OK")){
               //LOGIN CORRECTO
               String userId = String.valueOf(json_response.getInt("userId"));
               FRAME_menuUsuario.setVisible(true);
               FRAME_menuUsuario.setUSUARIO(usuario);
               FRAME_menuUsuario.setUSER_ID(userId);
               FRAME_menuUsuario.setUSER_PK(PKHash);
               this.setVisible(false);
           }else{
               String error = json_response.getString("error");
               jLabelError.setText(error);
           }
       } catch (IOException e) {
           e.printStackTrace();
           jLabelError.setText("Error realizando petición");
       } catch (JSONException ex) { 
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
       } 
    }
    
    //COMPROBAMOS QUE LA CONTRASEÑA ES SEGURA
    public boolean comprobarPasswordSegura(String password){
        Pattern special = Pattern.compile ("[!@#$%&*()_+=|<>?{}\\[\\]~-]");
        Pattern letter = Pattern.compile("[a-zA-z]");
        Pattern digit = Pattern.compile("[0-9]");
        
        if (password.length() >= 8) {
            Matcher hasSpecial = special.matcher(password);
            Matcher hasLetter = letter.matcher(password);
            Matcher hasDigit = digit.matcher(password);
            if (hasLetter.find() && hasDigit.find() && hasSpecial.find()) {
                jLabelError.setForeground(Color.green);
                jLabelError.setText("Registro realizado correctamente.");
                return true;
            } else {
                jLabelError.setText("La contraseña no es segura.");
                return false;
            }
        } else {
            jLabelError.setText("La contraseña debe tener al menos 8 caracteres.");
            return false;
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonLogin;
    private javax.swing.JButton jButtonRegistro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelError;
    private javax.swing.JLabel jLabelPassword;
    private javax.swing.JLabel jLabelUsuario;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPasswordField jTextFieldPassword;
    private javax.swing.JTextField jTextFieldUsuario;
    // End of variables declaration//GEN-END:variables
}
